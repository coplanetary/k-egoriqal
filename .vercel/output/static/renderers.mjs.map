{"version":3,"file":"renderers.mjs","sources":["../../../node_modules/@astrojs/solid-js/dist/context.js","../../../node_modules/@astrojs/solid-js/dist/server.js","../../../node_modules/@astrojs/svelte/server.js","../../../node_modules/@astrojs/preact/dist/context.js","../../../node_modules/@astrojs/preact/dist/signals.js","../../../node_modules/@astrojs/preact/dist/static-html.js","../../../node_modules/@astrojs/preact/dist/server.js","../../../node_modules/astro/dist/jsx/server.js"],"sourcesContent":["const contexts = /* @__PURE__ */ new WeakMap();\nfunction getContext(result) {\n  if (contexts.has(result)) {\n    return contexts.get(result);\n  }\n  let ctx = {\n    c: 0,\n    get id() {\n      return \"s\" + this.c.toString();\n    }\n  };\n  contexts.set(result, ctx);\n  return ctx;\n}\nfunction incrementId(ctx) {\n  let id = ctx.id;\n  ctx.c++;\n  return id;\n}\nexport {\n  getContext,\n  incrementId\n};\n","import {\n  createComponent,\n  generateHydrationScript,\n  NoHydration,\n  renderToString,\n  renderToStringAsync,\n  ssr,\n  Suspense\n} from \"solid-js/web\";\nimport { getContext, incrementId } from \"./context.js\";\nconst slotName = (str) => str.trim().replace(/[-_]([a-z])/g, (_, w) => w.toUpperCase());\nasync function check(Component, props, children) {\n  if (typeof Component !== \"function\")\n    return false;\n  if (Component.name === \"QwikComponent\")\n    return false;\n  const { html } = await renderToStaticMarkup.call(this, Component, props, children, {\n    // The purpose of check() is just to validate that this is a Solid component and not\n    // React, etc. We should render in sync mode which should skip Suspense boundaries\n    // or loading resources like external API calls.\n    renderStrategy: \"sync\"\n  });\n  return typeof html === \"string\";\n}\nasync function renderToStaticMarkup(Component, props, { default: children, ...slotted }, metadata) {\n  const ctx = getContext(this.result);\n  const renderId = metadata?.hydrate ? incrementId(ctx) : \"\";\n  const needsHydrate = metadata?.astroStaticSlot ? !!metadata.hydrate : true;\n  const tagName = needsHydrate ? \"astro-slot\" : \"astro-static-slot\";\n  const renderStrategy = metadata?.renderStrategy ?? \"async\";\n  const renderFn = () => {\n    const slots = {};\n    for (const [key, value] of Object.entries(slotted)) {\n      const name = slotName(key);\n      slots[name] = ssr(`<${tagName} name=\"${name}\">${value}</${tagName}>`);\n    }\n    const newProps = {\n      ...props,\n      ...slots,\n      // In Solid SSR mode, `ssr` creates the expected structure for `children`.\n      children: children != null ? ssr(`<${tagName}>${children}</${tagName}>`) : children\n    };\n    if (renderStrategy === \"sync\") {\n      return createComponent(Component, newProps);\n    } else {\n      if (needsHydrate) {\n        return createComponent(Suspense, {\n          get children() {\n            return createComponent(Component, newProps);\n          }\n        });\n      } else {\n        return createComponent(NoHydration, {\n          get children() {\n            return createComponent(Suspense, {\n              get children() {\n                return createComponent(Component, newProps);\n              }\n            });\n          }\n        });\n      }\n    }\n  };\n  const componentHtml = renderStrategy === \"async\" ? await renderToStringAsync(renderFn, {\n    renderId,\n    // New setting since Solid 1.8.4 that fixes an errant hydration event appearing in\n    // server only components. Not available in TypeScript types yet.\n    // https://github.com/solidjs/solid/issues/1931\n    // https://github.com/ryansolid/dom-expressions/commit/e09e255ac725fd59195aa0f3918065d4bd974e6b\n    ...{ noScripts: !needsHydrate }\n  }) : renderToString(renderFn, { renderId });\n  return {\n    attrs: {\n      \"data-solid-render-id\": renderId\n    },\n    html: componentHtml\n  };\n}\nvar server_default = {\n  check,\n  renderToStaticMarkup,\n  supportsAstroStaticSlot: true,\n  renderHydrationScript: () => generateHydrationScript()\n};\nexport {\n  server_default as default\n};\n","function check(Component) {\n\treturn Component['render'] && Component['$$render'];\n}\n\nfunction needsHydration(metadata) {\n\t// Adjust how this is hydrated only when the version of Astro supports `astroStaticSlot`\n\treturn metadata.astroStaticSlot ? !!metadata.hydrate : true;\n}\n\nasync function renderToStaticMarkup(Component, props, slotted, metadata) {\n\tconst tagName = needsHydration(metadata) ? 'astro-slot' : 'astro-static-slot';\n\tconst slots = {};\n\tfor (const [key, value] of Object.entries(slotted)) {\n\t\tslots[key] = () =>\n\t\t\t`<${tagName}${key === 'default' ? '' : ` name=\"${key}\"`}>${value}</${tagName}>`;\n\t}\n\tconst { html } = Component.render(props, { $$slots: slots });\n\treturn { html };\n}\n\nexport default {\n\tcheck,\n\trenderToStaticMarkup,\n\tsupportsAstroStaticSlot: true,\n};\n","const contexts = /* @__PURE__ */ new WeakMap();\nfunction getContext(result) {\n  if (contexts.has(result)) {\n    return contexts.get(result);\n  }\n  let ctx = {\n    c: 0,\n    get id() {\n      return \"p\" + this.c.toString();\n    },\n    signals: /* @__PURE__ */ new Map(),\n    propsToSignals: /* @__PURE__ */ new Map()\n  };\n  contexts.set(result, ctx);\n  return ctx;\n}\nfunction incrementId(ctx) {\n  let id = ctx.id;\n  ctx.c++;\n  return id;\n}\nexport {\n  getContext,\n  incrementId\n};\n","import { incrementId } from \"./context.js\";\nfunction isSignal(x) {\n  return x != null && typeof x === \"object\" && typeof x.peek === \"function\" && \"value\" in x;\n}\nfunction restoreSignalsOnProps(ctx, props) {\n  let propMap;\n  if (ctx.propsToSignals.has(props)) {\n    propMap = ctx.propsToSignals.get(props);\n  } else {\n    propMap = /* @__PURE__ */ new Map();\n    ctx.propsToSignals.set(props, propMap);\n  }\n  for (const [key, signal] of propMap) {\n    props[key] = signal;\n  }\n  return propMap;\n}\nfunction serializeSignals(ctx, props, attrs, map) {\n  const signals = {};\n  for (const [key, value] of Object.entries(props)) {\n    if (isSignal(value)) {\n      props[key] = value.peek();\n      map.set(key, value);\n      let id;\n      if (ctx.signals.has(value)) {\n        id = ctx.signals.get(value);\n      } else {\n        id = incrementId(ctx);\n        ctx.signals.set(value, id);\n      }\n      signals[key] = id;\n    }\n  }\n  if (Object.keys(signals).length) {\n    attrs[\"data-preact-signals\"] = JSON.stringify(signals);\n  }\n}\nexport {\n  restoreSignalsOnProps,\n  serializeSignals\n};\n","import { h } from \"preact\";\nconst StaticHtml = ({ value, name, hydrate = true }) => {\n  if (!value)\n    return null;\n  const tagName = hydrate ? \"astro-slot\" : \"astro-static-slot\";\n  return h(tagName, { name, dangerouslySetInnerHTML: { __html: value } });\n};\nStaticHtml.shouldComponentUpdate = () => false;\nvar static_html_default = StaticHtml;\nexport {\n  static_html_default as default\n};\n","import { Component as BaseComponent, h } from \"preact\";\nimport { render } from \"preact-render-to-string\";\nimport prepass from \"preact-ssr-prepass\";\nimport { getContext } from \"./context.js\";\nimport { restoreSignalsOnProps, serializeSignals } from \"./signals.js\";\nimport StaticHtml from \"./static-html.js\";\nconst slotName = (str) => str.trim().replace(/[-_]([a-z])/g, (_, w) => w.toUpperCase());\nlet originalConsoleError;\nlet consoleFilterRefs = 0;\nasync function check(Component, props, children) {\n  if (typeof Component !== \"function\")\n    return false;\n  if (Component.name === \"QwikComponent\")\n    return false;\n  if (Component.prototype != null && typeof Component.prototype.render === \"function\") {\n    return BaseComponent.isPrototypeOf(Component);\n  }\n  useConsoleFilter();\n  try {\n    try {\n      const { html } = await renderToStaticMarkup.call(this, Component, props, children, void 0);\n      if (typeof html !== \"string\") {\n        return false;\n      }\n      return html == \"\" ? false : !/<undefined>/.test(html);\n    } catch (err) {\n      return false;\n    }\n  } finally {\n    finishUsingConsoleFilter();\n  }\n}\nfunction shouldHydrate(metadata) {\n  return metadata?.astroStaticSlot ? !!metadata.hydrate : true;\n}\nasync function renderToStaticMarkup(Component, props, { default: children, ...slotted }, metadata) {\n  const ctx = getContext(this.result);\n  const slots = {};\n  for (const [key, value] of Object.entries(slotted)) {\n    const name = slotName(key);\n    slots[name] = h(StaticHtml, {\n      hydrate: shouldHydrate(metadata),\n      value,\n      name\n    });\n  }\n  let propsMap = restoreSignalsOnProps(ctx, props);\n  const newProps = { ...props, ...slots };\n  const attrs = {};\n  serializeSignals(ctx, props, attrs, propsMap);\n  const vNode = h(\n    Component,\n    newProps,\n    children != null ? h(StaticHtml, {\n      hydrate: shouldHydrate(metadata),\n      value: children\n    }) : children\n  );\n  await prepass(vNode);\n  const html = render(vNode);\n  return { attrs, html };\n}\nfunction useConsoleFilter() {\n  consoleFilterRefs++;\n  if (!originalConsoleError) {\n    originalConsoleError = console.error;\n    try {\n      console.error = filteredConsoleError;\n    } catch (error) {\n    }\n  }\n}\nfunction finishUsingConsoleFilter() {\n  consoleFilterRefs--;\n}\nfunction filteredConsoleError(msg, ...rest) {\n  if (consoleFilterRefs > 0 && typeof msg === \"string\") {\n    const isKnownReactHookError = msg.includes(\"Warning: Invalid hook call.\") && msg.includes(\"https://reactjs.org/link/invalid-hook-call\");\n    if (isKnownReactHookError)\n      return;\n  }\n  originalConsoleError(msg, ...rest);\n}\nvar server_default = {\n  check,\n  renderToStaticMarkup,\n  supportsAstroStaticSlot: true\n};\nexport {\n  server_default as default\n};\n","import { AstroError } from \"../core/errors/errors.js\";\nimport { AstroJSX, jsx } from \"../jsx-runtime/index.js\";\nimport { renderJSX } from \"../runtime/server/jsx.js\";\nconst slotName = (str) => str.trim().replace(/[-_]([a-z])/g, (_, w) => w.toUpperCase());\nasync function check(Component, props, { default: children = null, ...slotted } = {}) {\n  if (typeof Component !== \"function\")\n    return false;\n  const slots = {};\n  for (const [key, value] of Object.entries(slotted)) {\n    const name = slotName(key);\n    slots[name] = value;\n  }\n  try {\n    const result = await Component({ ...props, ...slots, children });\n    return result[AstroJSX];\n  } catch (e) {\n    const error = e;\n    if (Component[Symbol.for(\"mdx-component\")]) {\n      throw new AstroError({\n        message: error.message,\n        title: error.name,\n        hint: `This issue often occurs when your MDX component encounters runtime errors.`,\n        name: error.name,\n        stack: error.stack\n      });\n    }\n  }\n  return false;\n}\nasync function renderToStaticMarkup(Component, props = {}, { default: children = null, ...slotted } = {}) {\n  const slots = {};\n  for (const [key, value] of Object.entries(slotted)) {\n    const name = slotName(key);\n    slots[name] = value;\n  }\n  const { result } = this;\n  const html = await renderJSX(result, jsx(Component, { ...props, ...slots, children }));\n  return { html };\n}\nvar server_default = {\n  check,\n  renderToStaticMarkup\n};\nexport {\n  check,\n  server_default as default,\n  renderToStaticMarkup\n};\n"],"names":["contexts","getContext","incrementId","slotName","check","renderToStaticMarkup","server_default","Component","BaseComponent","StaticHtml","jsx"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}